name: Publish Artifacts

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write   # required for gh-pages deploy

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build with MSBuild
        run: msbuild Spectra-Build-Tools.sln /p:Configuration=Release

      - name: Package Artifacts
        run: |
          if ("${env:GITHUB_REF}" -like "refs/tags/v*") {
            $VERSION = "${env:GITHUB_REF}" -replace "refs/tags/v", ""
          } else {
            $VERSION = "${env:GITHUB_SHA}".Substring(0,7)  # fallback to short commit hash
          }

          echo "Using version: $VERSION"

          mkdir "artifacts/org/spectraengine/sbt/$VERSION" -Force
          Copy-Item "x64/Release/*.dll" "artifacts/org/spectraengine/sbt/$VERSION/sbt-$VERSION-windows-x64.dll"
          Copy-Item "x64/Release/*.exe" "artifacts/org/spectraengine/sbt/$VERSION/sbt-$VERSION-windows-x64.exe"

          # Add CNAME so GitHub Pages knows the custom domain
          "maven.spectraengine.org" | Out-File -FilePath artifacts/CNAME -Encoding ASCII
        shell: pwsh

      - name: Generate index.html
        shell: pwsh
        run: |
            function HtmlEscape([string]$s) {
              if ($null -eq $s) { return "" }
              return ($s -replace '&','&amp;' -replace '<','&lt;' -replace '>','&gt;' -replace '"','&quot;')
            }

            function HumanSize([long]$bytes) {
              if ($bytes -lt 1024) { return "$bytes B" }
              $k = [math]::Round($bytes / 1024.0, 1)
              if ($k -lt 1024) { return "$k KB" }
              $m = [math]::Round($k / 1024.0, 1)
              if ($m -lt 1024) { return "$m MB" }
              $g = [math]::Round($m / 1024.0, 1)
              return "$g GB"
            }

            # Recursively generate index.html in each directory
            function Generate-Index([string]$dir) {
              $hide = @("CNAME","index.html","404.html",".nojekyll")
              $dirs  = Get-ChildItem -Directory -Force -Path $dir -ErrorAction SilentlyContinue | Sort-Object Name
              $files = Get-ChildItem -File -Force -Path $dir -ErrorAction SilentlyContinue | Sort-Object Name

              $rows = ""

              # Directories first
              foreach ($d in $dirs) {
                $name = $d.Name
                $display = HtmlEscape("$name/")
                $href = "./" + [uri]::EscapeDataString($name) + "/"
                $rows += "<tr><td class='icon'>📁</td><td class='name'><a href='$href'>$display</a></td><td>folder</td><td class='right'></td></tr>`n"
              }

              # Then files
              foreach ($f in $files) {
                if ($hide -contains $f.Name) { continue }
                $name = $f.Name
                $display = HtmlEscape($name)
                $href = "./" + [uri]::EscapeDataString($name)
                $size = HumanSize($f.Length)
                $rows += "<tr><td class='icon'>📄</td><td class='name'><a href='$href'>$display</a></td><td>file</td><td class='right'>$size</td></tr>`n"
              }

              # Build full HTML (same look & feel as you asked)
              $html = @"
            <!doctype html>
            <html lang="en">
            <head>
              <meta charset="utf-8" />
              <meta name="viewport" content="width=device-width,initial-scale=1" />
              <title>maven.spectraengine.org</title>
              <style>
                :root { --fg:#0f172a; --muted:#475569; --bg:#ffffff; --card:#f8fafc; --link:#2563eb; --border:#e2e8f0; }
                * { box-sizing: border-box; }
                body { margin:0; font:14px/1.45 system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, "Apple Color Emoji","Segoe UI Emoji"; color:var(--fg); background:var(--bg); }
                header { padding:20px 16px; border-bottom:1px solid var(--border); background:#fff; position:sticky; top:0; }
                .wrap { max-width:980px; margin:0 auto; }
                h1 { margin:0 0 6px 0; font-size:18px; }
                .muted { color:var(--muted); }
                nav.breadcrumbs { margin:12px 0 0; font-size:13px; }
                nav.breadcrumbs a { color:var(--link); text-decoration:none; }
                nav.breadcrumbs span.sep { color:var(--muted); margin:0 6px; }
                main { padding:18px 16px 48px; }
                .panel { background:var(--card); border:1px solid var(--border); border-radius:12px; overflow:hidden; }
                .toolbar { display:flex; align-items:center; gap:8px; padding:10px 12px; border-bottom:1px solid var(--border); background:#fff; }
                .toolbar input { width:260px; max-width:100%; padding:8px 10px; border:1px solid var(--border); border-radius:8px; }
                table { width:100%; border-collapse:collapse; }
                th, td { padding:10px 12px; border-bottom:1px solid var(--border); }
                th { text-align:left; font-weight:600; background:#fff; position:sticky; top: 116px; z-index: 2; }
                tr:hover td { background:#f1f5f9; }
                .name a { text-decoration:none; color:var(--link); }
                .icon { width:26px; text-align:center; }
                .right { text-align:right; color:var(--muted); white-space:nowrap; }
                footer { padding:24px 16px; color:var(--muted); border-top:1px solid var(--border); }
                @media (prefers-color-scheme: dark) {
                  :root { --fg:#e5e7eb; --muted:#94a3b8; --bg:#0b1020; --card:#131a2b; --link:#8ab4ff; --border:#1f2937; }
                  table tr:hover td { background:#0f1626; }
                  header, th, .toolbar, footer { background:#0d1424; }
                }
              </style>
            </head>
            <body>
              <header>
                <div class="wrap">
                  <h1>maven.spectraengine.org</h1>
                  <div class="muted">Static artifact index (gh-pages)</div>
                  <nav class="breadcrumbs" id="breadcrumbs"></nav>
                </div>
              </header>

              <main class="wrap">
                <div class="panel">
                  <div class="toolbar">
                    <input id="search" type="search" placeholder="Filter files/folders…" />
                    <div class="muted" id="count"></div>
                  </div>
                  <table>
                    <thead>
                      <tr>
                        <th class="icon"></th>
                        <th>Name</th>
                        <th>Type</th>
                        <th class="right">Size</th>
                      </tr>
                    </thead>
                    <tbody>
                      $rows
                    </tbody>
                  </table>
                </div>
              </main>

              <footer class="wrap">
                Generated by GitHub Actions
              </footer>

            <script>
              // render breadcrumbs from the current path
              (function renderCrumbs(){
                const bc = document.getElementById('breadcrumbs');
                if(!bc) return;
                bc.innerHTML = '';
                // location.pathname might include repo name on github.io; we use it as-is.
                const raw = location.pathname.replace(/\/+$/,''); // no trailing slash
                const parts = raw.split('/').filter(Boolean);
                const make = (label, href) => {
                  const a = document.createElement('a');
                  a.textContent = label;
                  a.href = href;
                  return a;
                };
                // root link
                bc.appendChild(make('root','/'));
                let acc = '/';
                for(let i=0;i<parts.length;i++){
                  const seg = parts[i];
                  bc.appendChild(Object.assign(document.createElement('span'), {className:'sep', textContent:' / '}));
                  acc += seg + '/';
                  bc.appendChild(make(seg, acc));
                }
              })();

              // simple client-side search/filter
              (function setupSearch(){
                const input = document.getElementById('search');
                const tbody = document.querySelector('tbody');
                const rows = Array.from(tbody.querySelectorAll('tr'));
                document.getElementById('count').textContent = rows.length + ' item' + (rows.length===1 ? '' : 's');
                input.addEventListener('input', (e)=>{
                  const q = (e.target.value || '').toLowerCase();
                  let visible = 0;
                  rows.forEach(r=>{
                    const a = r.querySelector('.name a');
                    const text = a ? a.textContent.toLowerCase() : '';
                    const show = text.includes(q);
                    r.style.display = show ? '' : 'none';
                    if(show) visible++;
                  });
                  document.getElementById('count').textContent = visible + ' item' + (visible===1 ? '' : 's');
                });
              })();
            </script>
            </body>
            </html>
            "@

              # write this index for the current directory
              $out = Join-Path $dir "index.html"
              $html | Out-File -FilePath $out -Encoding utf8

              # recurse into child directories
              foreach ($child in $dirs) {
                Generate-Index $child.FullName
              }
            }

            # Start at artifacts root
            if (-Not (Test-Path artifacts)) { Write-Error "artifacts directory not found"; exit 1 }
            Generate-Index (Resolve-Path artifacts).Path

        #shell: pwsh

      - name: Add CNAME
        run: |
          "maven.spectraengine.org" | Out-File -FilePath artifacts/CNAME -Encoding ASCII
        shell: pwsh

      - name: Deploy to Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./artifacts
